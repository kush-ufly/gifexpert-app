{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","txtNombre","setTxtNombre","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","console","log","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OACI,mCACA,uBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEAJ,EAAUK,OAAOC,OAAO,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAkBO,OACrCN,EAAa,MAQb,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBS,SAACP,GAClBF,EAAaE,EAAEQ,OAAOF,OACtBG,QAAQC,IAAIb,Y,8BCTPc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCAETC,EAHa,iDAGmCC,UAAUH,GAH7C,oBACJ,mCADI,sBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACRV,QAAQC,IAAIS,GAENC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1CL,QAAQC,IAAIU,GAhBO,kBAiBZA,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OACI,sBAAKc,UAAW,6CAAhB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAIvB,ECNyB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDX0BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAMrB,OACI,qCACI,oBAAIJ,UAAW,wCAAf,SAAyDhB,IAExDoB,GAAW,wCAEZ,qBAAKJ,UAAW,YAAhB,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,wBAAE,EAAF,2BACIA,GADJ,IAEAiB,IAAOjB,EAAIC,eEiBnBiB,EAxCM,WAGrB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAQI,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,mFAGA,6BAEQ8C,EAAWpB,KAAI,SAACT,GAAD,OACP,cAAC,EAAD,CAGAA,SAAWA,GADNA,Y,MCrBhC8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.7b33433b.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [txtNombre, setTxtNombre] = useState('');\r\n\r\n    const handleChange = (e) =>{\r\n        setTxtNombre(e.target.value);\r\n        console.log(txtNombre)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n       // console.log(txtNombre)\r\n       if(txtNombre.trim().length>0){\r\n        setCategories( cats => [txtNombre,...cats]);\r\n        setTxtNombre('');\r\n       }\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={txtNombre}\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async (category) => {\r\n    const apiKey = 'IlLFRbh7JT2tnOfUWoFdz6hZKtl5ssCh';\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${apiKey}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    console.log(data);\r\n\r\n    const gifs = data.map(img => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        })\r\n    })\r\n\r\n    console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"card animate__animated animate__fadeInDown\"}>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n\r\n\r\n   const { data: images, loading } = useFetchGifs(category); //Renombrar\r\n\r\n \r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            <h3 className={\"animate__animated animate__fadeInDown\"}>{category}</h3>   \r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className={\"card-grid\"}>\r\n            { \r\n            \r\n                \r\n                    images.map( img => (\r\n                       < GifGridItem \r\n                       {...img}\r\n                       key = {img.id}\r\n                       />\r\n\r\n                    ))\r\n\r\n                \r\n\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n \r\n\r\n    \r\n    \r\n        \r\n    \r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state; // {data:[], loading:true}\r\n}","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['Monster Inc','Bichos','Buscando a Nemo'];\r\nconst [categories, setCategories] = useState(['Monster Inc']);\r\n\r\n //const handleAdd = (nombre)=>{\r\n    //setCategories( cats => [...cats, nombre]);\r\n// }\r\n//Variables de Componenentes\r\n\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr/>\r\n           \r\n           <label>Introduce el Nombre De la Pel√≠cula de Pixar</label>\r\n           \r\n\r\n           <ol>\r\n               {\r\n                   categories.map((category) => ( \r\n                           <GifGrid\r\n                           \r\n                           key={category}\r\n                           category ={category}\r\n                           \r\n                           />\r\n                    ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n//"],"sourceRoot":""}